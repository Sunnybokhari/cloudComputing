{"ast":null,"code":"var _jsxFileName = \"/Users/sunnybokhari/Documents/cloudComputing/my-task-manager-frontend/src/components/EditTaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditTaskForm = () => {\n  _s();\n  const [task, setTask] = useState({/* initial empty task state */});\n  const {\n    id\n  } = useParams(); // Task ID from URL\n  const history = useNavigate();\n  useEffect(() => {\n    // Fetch task details from backend\n    fetch(`http://localhost:3001/task/${id}`).then(response => response.json()).then(data => setTask(data)).catch(error => console.error('Error:', error));\n  }, [id]);\n  const handleChange = e => {\n    setTask({\n      ...task,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Code to update task in backend\n    fetch(`http://localhost:3001/task/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    }).then(() => history('/')) // Redirect after update\n    .catch(error => console.error('Error:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(EditTaskForm, \"kjskyy4Zbgt1nCciHbMKyKPWw94=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditTaskForm;\nexport default EditTaskForm;\nvar _c;\n$RefreshReg$(_c, \"EditTaskForm\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","EditTaskForm","_s","task","setTask","id","history","fetch","then","response","json","data","catch","error","console","handleChange","e","target","name","value","handleSubmit","preventDefault","method","headers","body","JSON","stringify","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sunnybokhari/Documents/cloudComputing/my-task-manager-frontend/src/components/EditTaskForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\n\nconst EditTaskForm = () => {\n    const [task, setTask] = useState({ /* initial empty task state */ });\n    const { id } = useParams(); // Task ID from URL\n    const history = useNavigate();\n\n    useEffect(() => {\n        // Fetch task details from backend\n        fetch(`http://localhost:3001/task/${id}`)\n            .then(response => response.json())\n            .then(data => setTask(data))\n            .catch(error => console.error('Error:', error));\n    }, [id]);\n\n    const handleChange = (e) => {\n        setTask({ ...task, [e.target.name]: e.target.value });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // Code to update task in backend\n        fetch(`http://localhost:3001/task/${id}`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(task),\n        })\n        .then(() => history('/')) // Redirect after update\n        .catch(error => console.error('Error:', error));\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            {/* Form fields similar to AddTaskForm, but prefilled with task data */}\n        </form>\n    );\n};\n\nexport default EditTaskForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,CAAE,+BAAgC,CAAC;EACpE,MAAM;IAAEU;EAAG,CAAC,GAAGR,SAAS,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAMS,OAAO,GAAGR,WAAW,CAAC,CAAC;EAE7BF,SAAS,CAAC,MAAM;IACZ;IACAW,KAAK,CAAE,8BAA6BF,EAAG,EAAC,CAAC,CACpCG,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIP,OAAO,CAACO,IAAI,CAAC,CAAC,CAC3BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;EACvD,CAAC,EAAE,CAACR,EAAE,CAAC,CAAC;EAER,MAAMU,YAAY,GAAIC,CAAC,IAAK;IACxBZ,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAE,CAACa,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;EACzD,CAAC;EAED,MAAMC,YAAY,GAAIJ,CAAC,IAAK;IACxBA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB;IACAd,KAAK,CAAE,8BAA6BF,EAAG,EAAC,EAAE;MACtCiB,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACvB,IAAI;IAC7B,CAAC,CAAC,CACDK,IAAI,CAAC,MAAMF,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;IAAA,CACzBM,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;EACnD,CAAC;EAED,oBACIb,OAAA;IAAM2B,QAAQ,EAAEP;EAAa;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEvB,CAAC;AAEf,CAAC;AAAC7B,EAAA,CApCID,YAAY;EAAA,QAECJ,SAAS,EACRC,WAAW;AAAA;AAAAkC,EAAA,GAHzB/B,YAAY;AAsClB,eAAeA,YAAY;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}