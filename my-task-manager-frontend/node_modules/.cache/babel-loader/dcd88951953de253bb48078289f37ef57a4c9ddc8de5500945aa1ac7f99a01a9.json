{"ast":null,"code":"var _jsxFileName = \"/Users/sunnybokhari/Documents/cloudComputing/my-task-manager-frontend/src/components/Task.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Modal from \"./Modal\";\nimport \"./Task.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Task = ({\n  id,\n  title,\n  description,\n  dueDate,\n  priority,\n  status,\n  fileUrl\n}) => {\n  _s();\n  console.log(id);\n  const [isModalOpen, setModalOpen] = useState(false);\n  const toggleModal = () => {\n    setModalOpen(!isModalOpen);\n  };\n  const handleDelete = id => {\n    fetch(`http://localhost:3001/task-delete/${id}`, {\n      method: \"DELETE\",\n      credentials: \"include\"\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      window.location.reload();\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Due Date: \", dueDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Priority: \", priority]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), fileUrl && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleModal,\n      className: \"view-attachment-btn\",\n      children: \"View Attachment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleDelete(id),\n      className: \"task-done-btn\",\n      children: \"Task Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: toggleModal,\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: fileUrl,\n        title: \"Attachment\",\n        className: \"attachment-iframe\",\n        allowFullScreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(Task, \"o+ymuZc6VVdUpCAroHabBGZ51VI=\");\n_c = Task;\nexport default Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","useState","Modal","jsxDEV","_jsxDEV","Task","id","title","description","dueDate","priority","status","fileUrl","_s","console","log","isModalOpen","setModalOpen","toggleModal","handleDelete","fetch","method","credentials","then","response","ok","Error","window","location","reload","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","isOpen","onClose","src","allowFullScreen","_c","$RefreshReg$"],"sources":["/Users/sunnybokhari/Documents/cloudComputing/my-task-manager-frontend/src/components/Task.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Modal from \"./Modal\";\nimport \"./Task.css\";\n\nconst Task = ({ id, title, description, dueDate, priority, status, fileUrl }) => {\n  console.log(id);\n    const [isModalOpen, setModalOpen] = useState(false);\n\n    const toggleModal = () => {\n        setModalOpen(!isModalOpen);\n    };\n\n    const handleDelete = (id) => {\n      fetch(`http://localhost:3001/task-delete/${id}`, {\n          method: \"DELETE\",\n          credentials: \"include\",\n      })\n      .then((response) => {\n          if (!response.ok) {\n              throw new Error(\"Network response was not ok\");\n          }\n          window.location.reload(); \n      })\n      .catch((error) => {\n          console.error(\"Error:\", error);\n      });\n  };\n\n    return (\n        <div className=\"task\">\n            <h3>{title}</h3>\n            <p>{description}</p>\n            <p>Due Date: {dueDate}</p>\n            <p>Priority: {priority}</p>\n            <p>Status: {status}</p>\n            {fileUrl && (\n                <button onClick={toggleModal} className=\"view-attachment-btn\">\n                    View Attachment\n                </button>\n            )}\n<button onClick={() => handleDelete(id)} className=\"task-done-btn\">\n    Task Done\n</button>\n\n            <Modal isOpen={isModalOpen} onClose={toggleModal}>\n                <iframe\n                    src={fileUrl}\n                    title=\"Attachment\"\n                    className=\"attachment-iframe\"\n                    allowFullScreen\n                />\n            </Modal>\n        </div>\n    );\n};\n\nexport default Task;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}